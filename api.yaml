openapi: "3.0.0"
info:
  title: Simple API overview
  version: 1.0.0
paths:
  /info/{userId}:
    get:
      summary: Get user's info
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: |-
            200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserInfoResponse'
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
        '404':
          description: |-
            404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-amazon-apigateway-integration:
        httpMethod: post
        type: aws
        passthroughBehavior: "when_no_match"
        uri: arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:745161175455:function:GetInfo/invocations
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Content-Sha256,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        requestParameters:
          method.request.path.userId: true
        requestTemplates:
          application/json: |
            "$input.params('userId')"

  /logIn:
    post:
      summary: Log in
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogInRequest'
      responses:
        '200':
          description: |-
            Successful Log in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
        '404':
          description: |-
            Failed Log in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-amazon-apigateway-integration:
        httpMethod: post
        type: aws
        passthroughBehavior: "when_no_match"
        uri: arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:745161175455:function:LogIn/invocations
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''

  /submission/{id}:


    get:
      summary: Get a specific submission item
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: |-
            200 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionItem'
      x-amazon-apigateway-integration:
        httpMethod: post
        type: aws
        passthroughBehavior: "when_no_match"
        uri: arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:745161175455:function:GetSubmissionById/invocations
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Content-Sha256,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        requestParameters:
          method.request.path.id: true
        requestTemplates:
          application/json: |
            "$input.params('id')"

  /submission:
    get:
      summary: Get all submissions
      responses:
        '200':
          description: |-
            200 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubmissionItem'
      x-amazon-apigateway-integration:
        httpMethod: post
        type: aws
        passthroughBehavior: "when_no_match"
        uri: arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:745161175455:function:GetAllSubmissions/invocations
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Content-Sha256,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
    post:
      summary: Post a submission item
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmissionItem'
      responses:
        '200':
          description: |-
            Successful post submission
          content:
            application/json:
              schema:
                type: string
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
      x-amazon-apigateway-integration:
        httpMethod: post
        type: aws
        passthroughBehavior: "when_no_match"
        uri: arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:745161175455:function:PostSubmission/invocations
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''


  /SignUp:
    post:
      summary: Sign Up
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpRequest'
      responses:
        '200':
          description: |-
            Successful Sign up
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
        '404':
          description: |-
            Failed Sign up
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-amazon-apigateway-integration:
        httpMethod: post
        type: aws
        passthroughBehavior: "when_no_match"
        uri: arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:745161175455:function:SignUp/invocations
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''

components:
  schemas:
    SubmissionItem:
      type: object
      properties:
        id:
          type: string
          nullable: false
        score:
          type: integer
          nullable: false
        timestamp:
          type: integer
          nullable: false
        selections:
          type: array
          items:
            type: string
            nullable: false

    LogInRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string

    SignUpRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        email:
          type: string

    SuccessResponse:
      type: object
      properties:
        message:
          type: string

    ErrorResponse:
      type: object
      properties:
        message:
          type: string

    GetUserInfoResponse:
      type: object
      properties:
        email:
          type: string
        username:
          type: string


